syntax = "proto3";

package turbine_core;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/meroxa/turbine/core/v2";

service TurbineService {
  rpc Init(InitRequest) returns (google.protobuf.Empty);

  rpc AddSource(AddSourceRequest) returns (AddSourceResponse);
  rpc ReadRecords(ReadRecordsRequest) returns (ReadRecordsResponse);

  rpc ProcessRecords(ProcessRecordsRequest) returns (ProcessRecordsResponse);

  rpc AddDestination(AddDestinationRequest) returns (AddDestinationResponse);
  rpc WriteRecords(WriteRecordsRequest) returns (google.protobuf.Empty);

  rpc GetSpec(GetSpecRequest) returns (GetSpecResponse);
}

enum Language {
  GOLANG = 0;
  PYTHON = 1;
  JAVASCRIPT = 2;
  RUBY = 3;
}

message InitRequest {
  string appName = 1 [(validate.rules).string.min_len = 1];
  string configFilePath = 2 [(validate.rules).string.min_len = 1];;
  Language language = 3 [(validate.rules).enum.defined_only = true];
  string gitSHA = 4;
  string turbineVersion = 5;
}

message AddSourceRequest {
  string name = 1 [(validate.rules).string.min_len = 1];
  Plugin plugin = 2;
}

message AddSourceResponse {
  string streamName = 1 [(validate.rules).string.min_len = 1];
}

message ReadRecordsRequest {
  string sourceStream = 1 [(validate.rules).string.min_len = 1];
}

message ReadRecordsResponse {
  Records records = 1 [(validate.rules).message.required = true];
}

message ProcessRecordsRequest {
  message Process {
    string name = 1 [(validate.rules).string.min_len = 1];
  }

  Process process = 1 [(validate.rules).message.required = true];
  Records records = 2 [(validate.rules).message.required = true];
}

message ProcessRecordsResponse {
  Records records = 1 [(validate.rules).message.required = true];
}

message AddDestinationRequest {
  string name = 1 [(validate.rules).string.min_len = 1];
  Plugin plugin = 2;
}

message AddDestinationResponse {
  string streamName = 1 [(validate.rules).string.min_len = 1];
}

message WriteRecordsRequest {
  string destinationStream = 1 [(validate.rules).string.min_len = 1];
  Records records = 2 [(validate.rules).message.required = true];
}

message GetSpecRequest {
  string image = 1;
}

message GetSpecResponse {
  bytes spec = 1;
}

message Records {
  string streamName = 1 [(validate.rules).string.min_len = 1];
  repeated Record records = 2;
}

message Record {
  string key = 1 [(validate.rules).string.min_len = 1];
  bytes value = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message Plugin {
  string Name = 1 [(validate.rules).string.min_len = 1];
  Configs configs = 3;
}

message Configs {
  message Config {
    string field = 1 [(validate.rules).string.min_len = 1];
    string value = 2;
  }

  repeated Config config = 1;
}
